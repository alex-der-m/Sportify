@model Sportify_back.Models.Users

@{
    ViewData["Title"] = "Create";
}

<h1>Crear</h1>

<h4>Usuarios</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Dni" class="control-label"></label>
                <input asp-for="Dni" class="form-control" />
                <span asp-validation-for="Dni" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Mail" class="control-label"></label>
                <input asp-for="Mail" class="form-control" />
                <span asp-validation-for="Mail" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" type="password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Phone" class="control-label"></label>
                <input asp-for="Phone" class="form-control" />
                <span asp-validation-for="Phone" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProfileId" class="control-label"></label>
                <select asp-for="ProfileId" class="form-control" asp-items="ViewBag.Profiles">
                <option value="">-- Select Profile --</option>
                </select>
                <span asp-validation-for="ProfileId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PlanId" class="control-label"></label>
                <select asp-for="PlanId" class="form-control" asp-items="ViewBag.Plans">
                <option value="">-- Select Plan --</option>
                </select>
                <span asp-validation-for="PlanId" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Active" /> @Html.DisplayNameFor(model => model.Active)
                </label>
            </div>
            <div class="form-group d-flex align-items-center">
                <div class="form-check mr-3">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="MedicalDocument" id="MedicalDocument" disabled /> 
                        @Html.DisplayNameFor(model => model.MedicalDocument)
                    </label>
                </div>
                
                <div>
                    <input asp-for="Document" type="file" class="form-control" id="Document" />
                    <span asp-validation-for="Document" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Crear" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Volver a la lista</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script>
    // Espera a que el documento se cargue
    document.addEventListener("DOMContentLoaded", function() {
        // Obtener los elementos del archivo y el checkbox
        const fileInput = document.getElementById('Document');
        const medicalDocCheckbox = document.getElementById('MedicalDocument');
        
        // Funci칩n para verificar si hay un archivo y marcar el checkbox
        function checkMedicalDocStatus() {
            // Si hay archivos seleccionados en el campo de documento, habilitar el checkbox y marcarlo
            if (fileInput.files && fileInput.files.length > 0) {
                medicalDocCheckbox.disabled = false; // Habilitar el checkbox
                medicalDocCheckbox.checked = true; // Marcar el checkbox
            } else {
                // Si no hay archivo seleccionado, deshabilitar el checkbox y desmarcarlo
                medicalDocCheckbox.disabled = true; // Deshabilitar el checkbox
                medicalDocCheckbox.checked = false; // Desmarcar el checkbox
            }
        }

        // Llamar a la funci칩n cuando el usuario seleccione un archivo
        fileInput.addEventListener('change', checkMedicalDocStatus);

        // Ejecutar la funci칩n una vez al cargar la p치gina para asegurar el estado correcto si ya hay un archivo
        checkMedicalDocStatus();
    });
</script>
